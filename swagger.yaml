swagger: '2.0'
info:
  title: Cerealis API
  description: Enterprise Resource Management API
  termsOfService: https://www.cerealis.com/privacy-policy
  contact:
    name: Cerealis
    url: https://www.cerealis.com/contact/
    email: support@cerealis.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.5.2
host: mspr.minarox.fr
basePath: /api
schemes:
  - https
consumes:
  - application/x-www-form-urlencoded
  - application/json
produces:
  - application/json
securityDefinitions:
  OAuth2_App:
    type: oauth2
    flow: application
    tokenUrl: https://mspr.minarox.fr/api/login
    scopes:
      admin: Default scope
      super_admin: Management of admins
      app: Android App
  OAuth2_Pass:
    type: oauth2
    flow: password
    tokenUrl: https://mspr.minarox.fr/api/login
    scopes:
      admin: Default scope
      super_admin: Management of admins
      app: Android App
  AccessToken:
    type: apiKey
    in: query
    name: access_token
    description: You need to generate an access token with /login endpoint.
tags:
  - name: Base
    description: API Description
  - name: Session
    description: Session management
  - name: Admin
    description: Admin management
  - name: User
    description: User management
  - name: Email
    description: Email management
  - name: Log
    description: Log management
  - name: Statistic
    description: Global statistics
paths:
  /:
    get:
      tags:
        - Base
      summary: API Description
      description: Display information about the API
      operationId: basePath
      responses:
        '200':
          description: API Description
          schema:
            type: array
            items:
              $ref: '#/definitions/api_description'
  /login:
    post:
      tags:
        - Session
      summary: Login to the API
      description: Connection to the API using identifiers such as a combination of username / password or client_id / client_secret.
      operationId: login
      parameters:
        - in: body
          name: body
          description: Login information
          required: true
          schema:
            $ref: '#/definitions/login'
      responses:
        '200':
          description: Login information
          schema:
            type: array
            items:
              $ref: '#/definitions/token'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
  /introspect:
    post:
      tags:
        - Session
      summary: Token information
      description: Token validity information
      operationId: introspect
      parameters:
        - in: body
          name: body
          description: Access_token or Refresh_token to check
          required: true
          schema:
            $ref: '#/definitions/token_string'
      responses:
        '200':
          description: Token status
          schema:
            type: array
            items:
              $ref: '#/definitions/token_status'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
            - app
        - OAuth2_Pass:
            - admin
            - super_admin
            - app
        - AccessToken: []
  /revoke:
    post:
      tags:
        - Session
      summary: Invalidates a token
      description: Invalidates a specific token
      operationId: revoke
      parameters:
        - in: body
          name: body
          description: Access_token or Refresh_token to revoke
          required: true
          schema:
            $ref: '#/definitions/token_string'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
        '409':
          description: Conflict
          schema:
            type: array
            items:
              $ref: '#/definitions/409'
      security:
        - OAuth2_App:
            - admin
            - super_admin
            - app
        - OAuth2_Pass:
            - admin
            - super_admin
            - app
        - AccessToken: []
  /userinfo:
    get:
      tags:
        - Session
      summary: Current user information
      description: Information of the user currently connected to the API
      operationId: userinfo
      responses:
        '200':
          description: User information
          schema:
            type: array
            items:
              $ref: '#/definitions/session'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
      security:
        - OAuth2_App:
            - admin
            - super_admin
            - app
        - OAuth2_Pass:
            - admin
            - super_admin
            - app
        - AccessToken: []
    put:
      tags:
        - Session
      summary: Edit current user information
      description: Edit the information of the user currently connected to the API
      operationId: editUserinfo
      parameters:
        - in: body
          name: body
          description: User information
          required: true
          schema:
            $ref: '#/definitions/session'
      responses:
        '200':
          description: User information
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
      security:
        - OAuth2_App:
            - admin
            - super_admin
            - app
        - OAuth2_Pass:
            - admin
            - super_admin
            - app
        - AccessToken: []
  /userinfo/password:
    put:
      tags:
        - Session
      summary: Edit password
      description: Edit the password of the user currently connected to the API
      operationId: editPassword
      parameters:
        - in: body
          name: body
          description: New password
          required: true
          schema:
            $ref: '#/definitions/password'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
      security:
        - OAuth2_App:
            - admin
            - super_admin
            - app
        - OAuth2_Pass:
            - admin
            - super_admin
            - app
        - AccessToken: []
  /logout:
    get:
      tags:
        - Session
      summary: Logout from the API
      description: Disconnects the current session from the API
      operationId: logout
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
      security:
        - OAuth2_App:
            - admin
            - super_admin
            - app
        - OAuth2_Pass:
            - admin
            - super_admin
            - app
        - AccessToken: []
  /admins:
    get:
      tags:
        - Admin
      summary: List of admins
      description: Return list of all admins in the database
      operationId: getAdmins
      parameters:
        - name: email
          in: query
          type: string
        - name: first_name
          in: query
          type: string
        - name: last_name
          in: query
          type: string
        - name: scope
          in: query
          type: string
        - name: active
          in: query
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/admins'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
    post:
      tags:
        - Admin
      summary: Create new Admin
      description: Create new admin account in the database
      operationId: addAdmin
      parameters:
        - in: body
          name: body
          description: New admin
          required: true
          schema:
            $ref: '#/definitions/new_admin'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '409':
          description: Conflict
          schema:
            type: array
            items:
              $ref: '#/definitions/409'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /admins/{admin_id}:
    get:
      tags:
        - Admin
      summary: Information of admin
      description: Return information of the admin
      operationId: getAdmin
      parameters:
        - name: admin_id
          in: path
          description: Target admin
          required: true
          type: string
      responses:
        '200':
          description: Admin information
          schema:
            type: array
            items:
              $ref: '#/definitions/admin'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
    put:
      tags:
        - Admin
      summary: Edit admin
      description: Edit account information of an admin
      operationId: editAdmin
      parameters:
        - name: admin_id
          in: path
          description: Target admin
          required: true
          type: string
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            $ref: '#/definitions/update_admin'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
    delete:
      tags:
        - Admin
      summary: Remove admin
      description: Delete existing admin
      operationId: deleteAdmin
      parameters:
        - name: admin_id
          in: path
          description: Target admin
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /admins/{admin_id}/password:
    put:
      tags:
        - Admin
      summary: Edit admin password
      description: Edit password of the admin
      operationId: editAdminPassword
      parameters:
        - name: admin_id
          in: path
          description: Target admin
          required: true
          type: string
        - in: body
          name: body
          description: New password
          required: true
          schema:
            $ref: '#/definitions/new_password'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /users:
    get:
      tags:
        - User
      summary: List of users
      description: Return list of all users in the database
      operationId: getUsers
      parameters:
        - name: email
          in: query
          type: string
        - name: first_name
          in: query
          type: string
        - name: last_name
          in: query
          type: string
        - name: device
          in: query
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/users'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
    post:
      tags:
        - User
      summary: Add user
      description: Create new user
      operationId: addUser
      parameters:
        - in: body
          name: body
          description: New user
          required: true
          schema:
            $ref: '#/definitions/new_user'
      responses:
        '201':
          description: Created
          schema:
            type: array
            items:
              $ref: '#/definitions/201'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - app
            - super_admin
        - OAuth2_Pass:
            - app
            - super_admin
        - AccessToken: []
  /users/delete:
    put:
      tags:
        - User
      summary: Remove users
      description: Delete existing users
      operationId: deleteUsers
      parameters:
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            $ref: '#/definitions/delete_users'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /users/{user_id}:
    get:
      tags:
        - User
      summary: Information of user
      description: Return information of a user
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          description: Target user
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
    put:
      tags:
        - User
      summary: Edit user
      description: Edit information of a user
      operationId: editUser
      parameters:
        - name: user_id
          in: path
          description: Target user
          required: true
          type: string
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            $ref: '#/definitions/update_user'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
    delete:
      tags:
        - User
      summary: Remove user
      description: Delete existing user
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: Target user
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /emails:
    get:
      tags:
        - Email
      summary: List of emails
      description: Return list of all emails in the database
      operationId: getEmails
      parameters:
        - name: title
          in: query
          type: string
        - name: description
          in: query
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/emails'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
    post:
      tags:
        - Email
      summary: Add email
      description: Create new email
      operationId: addEmail
      parameters:
        - in: body
          name: body
          description: New email
          required: true
          schema:
            $ref: '#/definitions/new_email'
      responses:
        '201':
          description: Created
          schema:
            type: array
            items:
              $ref: '#/definitions/201'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
  /emails/{email_id}:
    get:
      tags:
        - Email
      summary: Information of email
      description: Return information of an email
      operationId: getEmail
      parameters:
        - name: email_id
          in: path
          description: Target email
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/email'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
    post:
      tags:
        - Email
      summary: Add email from template
      description: Add new email from existing one
      operationId: addTemplateEmail
      parameters:
        - name: email_id
          in: path
          description: Target email
          required: true
          type: string
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            $ref: '#/definitions/new_template_email'
      responses:
        '201':
          description: Created
          schema:
            type: array
            items:
              $ref: '#/definitions/201'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
    put:
      tags:
        - Email
      summary: Edit email
      description: Edit information of an email
      operationId: editEmail
      parameters:
        - name: email_id
          in: path
          description: Target email
          required: true
          type: string
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            $ref: '#/definitions/update_email'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
    delete:
      tags:
        - Email
      summary: Remove email
      description: Delete existing email
      operationId: deleteEmail
      parameters:
        - name: email_id
          in: path
          description: Target email
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/200'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
  /emails/send:
    post:
      tags:
        - Email
      summary: Send emails to users
      description: Send newsletter to users
      operationId: sendEmails
      parameters:
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            $ref: '#/definitions/send_emails'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/success_email'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - admin
            - super_admin
        - OAuth2_Pass:
            - admin
            - super_admin
        - AccessToken: []
  /logs:
    get:
      tags:
        - Log
      summary: List of logs
      description: Return list of all logs in the database
      operationId: getLogs
      parameters:
        - name: source
          in: query
          type: string
        - name: source_id
          in: query
          type: string
        - name: source_type
          in: query
          type: string
        - name: action
          in: query
          type: string
        - name: target
          in: query
          type: string
        - name: target_id
          in: query
          type: string
        - name: target_type
          in: query
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/logs'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /statistics:
    get:
      tags:
        - Statistic
      summary: Global statistics
      description: Return global statistics of the app
      operationId: getGlobalStats
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/global_stats'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /statistics/avg-usage-month:
    get:
      tags:
        - Statistic
      summary: Average usage for 1 month
      description: Return usage statistics per month
      operationId: getAvgUsageMonth
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/avg_usage'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /statistics/avg-usage-day:
    get:
      tags:
        - Statistic
      summary: Average usage for 1 week
      description: Return usage statistics per day
      operationId: getAvgUsageDay
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/avg_usage'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
  /statistics/avg-usage-hour:
    get:
      tags:
        - Statistic
      summary: Average usage for 1 day
      description: Return usage statistics per hour
      operationId: getAvgUsageHour
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/avg_usage_hour'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/400'
        '401':
          description: Unauthorized
          schema:
            type: array
            items:
              $ref: '#/definitions/401'
        '404':
          description: Not Found
          schema:
            type: array
            items:
              $ref: '#/definitions/404'
      security:
        - OAuth2_App:
            - super_admin
        - OAuth2_Pass:
            - super_admin
        - AccessToken: []
definitions:
  '200':
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 200
      code_description:
        type: string
        example: Success
    xml:
      name: '200'
  '201':
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 201
      code_description:
        type: string
        example: Created
    xml:
      name: '201'
  '400':
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 400
      code_description:
        type: string
        example: Bad Request
    xml:
      name: '400'
  '401':
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 401
      code_description:
        type: string
        example: Unauthorized
    xml:
      name: '401'
  '404':
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 404
      code_description:
        type: string
        example: Not Found
    xml:
      name: '404'
  '409':
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 409
      code_description:
        type: string
        example: Conflict
    xml:
      name: '409'
  api_description:
    type: object
    properties:
      version:
        type: string
        example: v1.0
      title:
        type: string
        example: Cerealis API
      description:
        type: string
        example: Enterprise Resource Management API
      host:
        type: string
        example: https://mspr.minarox.fr
      base_path:
        type: string
        example: /api
    xml:
      name: api_description
  login:
    type: object
    required:
      - grant_type
    properties:
      grant_type:
        type: string
        example: client_credentials
      email:
        type: string
        example: user@example.com
      password:
        type: string
        format: password
        example: abcdefgh12345678
      client_id:
        type: string
        example: '0000000000000000000000000000000000000000'
      client_secret:
        type: string
        format: password
        example: abcdefgh12345678
    xml:
      name: login
  token:
    type: object
    properties:
      access_token:
        type: string
        example: '0000000000000000000000000000000000000000'
      expires_in:
        type: integer
        format: int32
        example: '3600'
      token_type:
        type: string
        example: Bearer
      scope:
        type: string
        example: 'null'
      refresh_token:
        type: string
        example: '0000000000000000000000000000000000000000'
    xml:
      name: token
  token_string:
    type: object
    properties:
      access_token:
        type: string
        example: '0000000000000000000000000000000000000000'
      refresh_token:
        type: string
        example: '0000000000000000000000000000000000000000'
    xml:
      name: token_string
  token_status:
    type: object
    properties:
      active:
        type: boolean
        example: 'true'
      expires:
        type: integer
        example: '12345678'
    xml:
      name: token_string
  session:
    type: object
    properties:
      email:
        type: string
        example: user@example.com
      first_name:
        type: string
        example: Name
      last_name:
        type: string
        example: Name
    xml:
      name: session
  password:
    type: object
    required:
      - old_password
      - new_password
      - confirm_new_password
    properties:
      old_password:
        type: string
        format: password
        example: abcdefgh12345678
      new_password:
        type: string
        format: password
        example: abcdefgh12345678
      confirm_new_password:
        type: string
        format: password
        example: abcdefgh12345678
    xml:
      name: password
  admins:
    type: object
    properties:
      admin_id:
        type: string
        example: 00000000-0000-0000-0000-000000000000
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      scope:
        type: string
        example: admin
      active:
        type: boolean
        example: 'true'
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: admins
  new_admin:
    type: object
    required:
      - email
      - password
      - confirm_password
      - first_name
      - last_name
    properties:
      email:
        type: string
        example: test@example.com
      password:
        type: string
        format: password
        example: abcdefgh12345678
      confirm_password:
        type: string
        format: password
        example: abcdefgh12345678
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      scope:
        type: string
        example: admin
      active:
        type: boolean
        example: 'true'
    xml:
      name: new_admin
  admin:
    type: object
    properties:
      email:
        type: string
        example: test@example.com
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      scope:
        type: string
        example: admin
      active:
        type: boolean
        example: 'true'
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
      updated_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: admin
  update_admin:
    type: object
    properties:
      email:
        type: string
        example: test@example.com
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      scope:
        type: string
        example: admin
      active:
        type: boolean
        example: 'true'
    xml:
      name: update_admin
  new_password:
    type: object
    required:
      - new_password
      - confirm_new_password
    properties:
      new_password:
        type: string
        format: password
        example: abcdefgh12345678
      confirm_new_password:
        type: string
        format: password
        example: abcdefgh12345678
    xml:
      name: new_password
  users:
    type: object
    properties:
      user_id:
        type: string
        example: 00000000-0000-0000-0000-000000000000
      email:
        type: string
        example: test@example.com
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      device:
        type: string
        example: Device name
      nb_share:
        type: integer
        example: 1
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: users
  user:
    type: object
    properties:
      email:
        type: string
        example: test@example.com
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      device:
        type: string
        example: Device name
      nb_share:
        type: integer
        example: 1
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
      updated_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: user
  new_user:
    type: object
    required:
      - email
      - first_name
      - last_name
    properties:
      email:
        type: string
        example: test@example.com
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      device:
        type: string
        example: Device name
    xml:
      name: new_user
  update_user:
    type: object
    properties:
      email:
        type: string
        example: test@example.com
      first_name:
        type: string
        example: First name
      last_name:
        type: string
        example: Last name
      device:
        type: string
        example: Device name
    xml:
      name: update_user
  delete_users:
    type: object
    properties:
      users:
        type: array
        items: {}
    xml:
      name: delete_users
  emails:
    type: object
    properties:
      email_id:
        type: integer
        example: '123'
      title:
        type: string
        example: Title
      description:
        type: string
        example: Description of the mail
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: emails
  email:
    type: object
    properties:
      title:
        type: string
        example: Title
      description:
        type: string
        example: Description of the mail
      subject:
        type: string
        example: Subject of the mail
      content:
        type: string
        example: Content of the mail
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
      updated_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: email
  new_email:
    type: object
    required:
      - title
      - content
    properties:
      title:
        type: string
        example: Title
      description:
        type: string
        example: Description of the mail
      subject:
        type: string
        example: Subject of the mail
      content:
        type: string
        example: Content of the mail
    xml:
      name: new_email
  new_template_email:
    type: object
    required:
      - title
    properties:
      title:
        type: string
        example: Title
      description:
        type: string
        example: Description of the mail
    xml:
      name: new_template_email
  update_email:
    type: object
    properties:
      title:
        type: string
        example: Title
      description:
        type: string
        example: Description of the mail
      subject:
        type: string
        example: Subject of the mail
      content:
        type: string
        example: Content of the mail
    xml:
      name: update_email
  success_email:
    type: object
    properties:
      code_value:
        type: integer
        format: int32
        example: 200
      code_description:
        type: string
        example: All emails have been sent
    xml:
      name: success_email
  send_emails:
    type: object
    properties:
      email_id:
        type: integer
        format: int32
        example: 130
      users:
        type: array
        items: {}
    xml:
      name: send_emails
  logs:
    type: object
    properties:
      source:
        type: string
        example: Name of the source
      source_id:
        type: string
        example: 00000000-0000-0000-0000-000000000000
      source_type:
        type: string
        example: Admin
      action:
        type: string
        example: EmailSend
      target:
        type: string
        example: Name of the target
      target_id:
        type: string
        example: 00000000-0000-0000-0000-000000000000
      target_type:
        type: string
        example: User
      created_at:
        type: string
        format: date
        example: '2000-01-01 00:00:00'
    xml:
      name: logs
  global_stats:
    type: object
    properties:
      nb_users:
        type: integer
        example: 500
      nb_share:
        type: integer
        example: 784
      avg_usage_day:
        type: number
        example: 8.123
      avg_usage_7_days:
        type: number
        example: 10.739
      most_used_android_version:
        type: string
        example: Android 8.0
    xml:
      name: global_stats
  avg_usage:
    type: object
    properties:
      days:
        type: array
        items: { }
      values:
        type: array
        items: { }
    xml:
      name: avg_usage
  avg_usage_hour:
    type: object
    properties:
      hours:
        type: array
        items: { }
      values:
        type: array
        items: { }
    xml:
      name: avg_usage_hour